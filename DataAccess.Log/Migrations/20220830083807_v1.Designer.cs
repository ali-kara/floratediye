// <auto-generated />
using System;
using DataAccess.Log;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Log.Migrations
{
    [DbContext(typeof(LogDBContext))]
    [Migration("20220830083807_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Entities.Log.Concrete.ContactUs", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TelefonNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Country", b =>
                {
                    b.Property<int>("CountryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryID"), 1L, 1);

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CountryID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Duyurular", b =>
                {
                    b.Property<int>("DuyuruID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DuyuruID"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("DateTime");

                    b.Property<string>("Bolge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HerkeseMi")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OnayGerekir")
                        .HasColumnType("bit");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("DuyuruID");

                    b.ToTable("Duyurular");
                });

            modelBuilder.Entity("Entities.Log.Concrete.DuyurularKayit", b =>
                {
                    b.Property<int>("KayitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KayitId"), 1L, 1);

                    b.Property<string>("Baslik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DuyuruID")
                        .HasColumnType("int");

                    b.Property<int>("DuyurularDuyuruID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mesaj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Onaylandi")
                        .HasColumnType("bit");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UreticiNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KayitId");

                    b.HasIndex("DuyurularDuyuruID");

                    b.ToTable("DuyurularKayit");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Sube", b =>
                {
                    b.Property<int>("SubeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubeID"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CountryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SubeAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubeKisaAdi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SubeID");

                    b.HasIndex("CountryID");

                    b.ToTable("Sube");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BlockDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SubeId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TcKimlikNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("userType")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("SubeId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Log.Concrete.WebExceptionLogs", b =>
                {
                    b.Property<int>("ExceptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExceptionID"), 1L, 1);

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Controller")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("InnerException")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OlusturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("Pasif")
                        .HasColumnType("bit");

                    b.Property<string>("SonGuncelleyen")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Stacktrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ExceptionID");

                    b.ToTable("WebExceptionLogs");
                });

            modelBuilder.Entity("Entities.Log.Concrete.DuyurularKayit", b =>
                {
                    b.HasOne("Entities.Log.Concrete.Duyurular", "Duyurular")
                        .WithMany("DuyurularKayit")
                        .HasForeignKey("DuyurularDuyuruID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Duyurular");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Sube", b =>
                {
                    b.HasOne("Entities.Log.Concrete.Country", "il")
                        .WithMany("subeler")
                        .HasForeignKey("CountryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("il");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Users", b =>
                {
                    b.HasOne("Entities.Log.Concrete.Sube", "sube")
                        .WithMany()
                        .HasForeignKey("SubeId");

                    b.Navigation("sube");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Country", b =>
                {
                    b.Navigation("subeler");
                });

            modelBuilder.Entity("Entities.Log.Concrete.Duyurular", b =>
                {
                    b.Navigation("DuyurularKayit");
                });
#pragma warning restore 612, 618
        }
    }
}
